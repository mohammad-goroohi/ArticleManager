@inject ArticleManagerContext _context
@{
    Article articles = await _context.Articles.Include(a=>a.Cites).ThenInclude(aa=>aa.DestinationArticle).SingleOrDefaultAsync(a=>a.ID==(int)ViewData["SourceArticleID"]);
}
<table class="table table-hover">
    <thead>
        <tr>
            <th>Title</th>
            <th>Link</th>
            <th>FilePath</th>
            <th></th>
            <th>Description</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var article in articles.Cites)
        {
            <tr>
                <td>@article.DestinationArticle.Title</td>
                <td>
                    <a target="_blank" href="@article.DestinationArticle.Link">@article.DestinationArticle.Link</a>
                </td>
                <td>
                    <a target="_blank" href="/Article/@article.DestinationArticle.FilePath">@article.DestinationArticle.FilePath</a>
                </td>
                @if (article.DestinationArticle.IsRead)
                {
                    <td class="text-success">Read</td>
                }
                else
                {
                    <td class="text-danger">UnRead</td>
                }
                <td>@Html.Raw(article.Description)</td>
                <td>
                    <a class="btn btn-primary" href="/ArticleArticle/Edit?id=@article.ID">Edit</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<a href="/Article/CreateCite?SourceArticleID=@((int)ViewData["SourceArticleID"])" class="btn btn-success">Create</a>
<a href="/Article/Edit?id=@((int)ViewData["SourceArticleID"])" class="btn btn-info">Back</a>